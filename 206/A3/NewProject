#!/bin/bash

# Camilo Garcia La Rotta
# ID 260657037
# COMP 206 A2

### PART 1

# global variable declarations
file_path=""
file_name=""

# validate number of arguments
if [[ "$#" -gt 2 ]]; then
  echo "Too many arguments. Type in: NewProject path project_name"
  exit 1
elif [[ "$#" -lt 1 ]]; then
  echo "Project name is missing. Type in: NewProject path project_name"
  exit 1
elif [[ "$#" -eq 2 ]]; then
  if [[ -d "$1" ]]; then
    # path is correct, assign file path and name
    file_path=$1
    file_name=$2
  else 
    echo "Your path name is malformed. Type in: NewProject path project_name"
    exit 1;
  fi
else 
  # only 1 argument: file name, assing default to file path
  file_path="./"
  file_name=$1
fi

# create best practice directory structure
mkdir -p ${file_path}/${file_name}/{"docs","source","backup","archive"}


### PART 2

cat << 'EOF' >> ${file_path}/${file_name}/source/compile
#!/bin/bash

# this script was generated from inside Newproject

output_name=""

# parse option flags

while getopts 'o:' flag; do
  case "${flag}" in
    o) # outputa name flag found
      output_name=$2
      shift
      shift
      ;;
    *) 
      echo "Unexpected flag ${flag}"
      exit 1
      ;;
  esac
done

# verify if any c files where given as argument
test "$#" -gt 0 || { echo "You are missing file names. Type in: compile -o executable_name file_name(s)"; exit 1; }

# compile
cp "$@" ../backup
  
if [[ -n $output_name ]]; then
  gcc -o $output_name $@ 2> errors
else
  gcc $@ 2> errors
fi

more errors

exit 0
EOF

chmod +x ${file_path}/${file_name}/source/compile 


exit 0
